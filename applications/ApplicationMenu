package applications;
import interfaces.IObservable;
import interfaces.IObserver;
import interfaces.IPluginsAppPlugin;
import interfaces.IShape;
import java.util.ArrayList;
import observer.Observable;
import observer.StockObserver;


public class ApplicationMenu  implements IObserver{
    
    private PluginManager pluginMan;
    private Menu mainMenu = null;
    
    public ApplicationMenu(PluginManager pluginMan)
    {
        this.pluginMan = pluginMan;                
    }
    
    public void load(SampleShape board)
    {
        pluginMan.loadPlugins("/plugins");
        ArrayList<IMenuItem> menuItems = new ArrayList<IMenuItem>();

        int shortCut = 1;
         
        var plugins = pluginMan.getPlugins();
        
        for (int i = 0 ; i < plugins.size(); i++)
        {      
           var currentPlugin = plugins.get(i);
           MenuItem currentItem = new MenuItem(plugins.get(i).getDisplayText(), shortCut++, (parameters)->{
               IShape shape = currentPlugin.getShape();
               Observable observable = new Observable();
               StockObserver observable1 = new StockObserver(observable);
               shape.read();
               shape.Area();
               board.addObserver(observable1);
               board.add(shape);
          });
           menuItems.add(currentItem);
        }
        mainMenu = new Menu("Main Menu", -1, menuItems);
    
        
        
    }
    
    public void execute()
    {
        mainMenu.execute();
    }

	@Override
	public void update() {
		// TODO Auto-generated method stub
		
	}
    
}
